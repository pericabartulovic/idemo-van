{"mappings":"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","sources":["js/script.js"],"sourcesContent":["'use strict';\n\n// window.addEventListener('load', () => loader.classList.add('hidden'));\n\nclass Aktivnost {\n  // date = new Date(1618066800000); // proljeće 10.04.2020\n  // date = new Date(1598194800000); // ljeto 23.08.2020\n  // date = new Date(1633878000000); // jesen\n  // date = new Date(1609344000000); // zima 30.12.2020\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n\n  constructor(coords, distance, duration, note) {\n    // this.date = ...; ovoga se još uvijek treba držati jer deklariranje javnih ili zaštitećenih varijabli još nije postalo standard\n    // this.id = ...;\n    this.coords = coords; //[lat, lng]\n    this.distance = distance; // u km\n    this.duration = duration; // u min.\n    this.note = note;\n  }\n  _setDescription() {\n    // prettier-ignore\n    const months = ['siječnja', 'veljače', 'ožujka', 'travnja', 'svibnja', 'lipnja', 'srpnja', 'kolovoza', 'rujna', 'listopada', 'studenog', 'prosinca'];\n    // prettier-ignore\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} ${this.date.getDate()}. ${months[this.date.getMonth()]}`;\n  }\n}\n\nclass Setnja extends Aktivnost {\n  type = 'setnja';\n  constructor(coords, distance, duration, note) {\n    super(coords, distance, duration, note);\n    this._setDescription();\n  }\n}\nclass Bicikliranje extends Aktivnost {\n  type = 'bicikliranje';\n  constructor(coords, distance, duration, note) {\n    super(coords, distance, duration, note);\n    this._setDescription();\n  }\n}\nclass Rolanje extends Aktivnost {\n  type = 'romobil';\n  constructor(coords, distance, duration, note) {\n    super(coords, distance, duration, note);\n    this._setDescription();\n  }\n}\nclass Izlet extends Aktivnost {\n  type = 'izlet';\n  constructor(coords, distance, duration, note) {\n    super(coords, distance, duration, note);\n    this._setDescription();\n  }\n}\nclass Sanjkanje extends Aktivnost {\n  type = 'sanjkanje';\n  constructor(coords, distance, duration, note) {\n    super(coords, distance, duration, note);\n    this._setDescription();\n  }\n}\n///////////////////////////////////////////////////////////// APP ARCHITECTURE  ///////////////////////////////////////////////////////////\nconst karta = document.getElementById('map');\nconst form = document.querySelector('.form');\nconst loader = document.querySelector('.loader');\nconst containerAktivnosti = document.querySelector('.containerAktivnosti');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputDescription = document.querySelector('.form__input--description');\nconst holder = document.querySelectorAll('.image-holder');\nconst godisnjaDoba = document.querySelectorAll('.godisnje-doba');\nconst proljeceLista = document.querySelector('.proljece--lista');\nconst ljetoLista = document.querySelector('.ljeto--lista');\nconst jesenLista = document.querySelector('.jesen--lista');\nconst medjusloj = document.querySelector('.medjusloj');\nconst medjusloj2 = document.querySelector('.medjusloj2');\nconst medjusloj3 = document.querySelector('.medjusloj3');\nconst medjusloj4 = document.querySelector('.medjusloj4');\nconst zimaLista = document.querySelector('.zima--lista');\nconst spring = document.querySelector('.spring');\nconst summer = document.querySelector('.summer');\nconst summerImg = document.querySelector('.summer-img');\nconst autumn = document.querySelector('.autumn');\nconst winter = document.querySelector('.winter');\nconst cancel = document.querySelector('.cancel');\nconst btnProljece = document.querySelector('.btn-proljece');\nconst btnLjeto = document.querySelector('.btn-ljeto');\nconst btnJesen = document.querySelector('.btn-jesen');\nconst btnZima = document.querySelector('.btn-zima');\n\n///////////////////////////////////////////////////// *** ///////////////////////////////////////////////////\n///////////////////////////////////////////////////// APP ///////////////////////////////////////////////////\n///////////////////////////////////////////////////// *** ///////////////////////////////////////////////////\n\nclass App {\n  #map;\n  #mapEvent;\n  #aktivnosti = [\n    {\n      date: '2021-04-10T15:00:00.000Z',\n      id: '7368972114',\n      coords: [45.807423037271946, 15.893096923828127],\n      distance: 5,\n      duration: 2,\n      note: 'Plavi parkić',\n      type: 'setnja',\n      description: 'Setnja 10. travnja',\n    },\n    {\n      date: '2021-04-10T15:00:00.000Z',\n      id: '7369002618',\n      coords: [45.80432374729885, 15.895972251892092],\n      distance: 5,\n      duration: 2,\n      note: 'Kukuljac',\n      type: 'romobil',\n      description: 'Romobil 10. travnja',\n    },\n    {\n      date: '2021-04-10T15:00:00.000Z',\n      id: '7369034826',\n      coords: [45.802268427987, 15.895916462468453],\n      distance: 7,\n      duration: 1.5,\n      note: 'Krug oko Kukuljca',\n      type: 'bicikliranje',\n      description: 'Bicikliranje 10. travnja',\n    },\n    {\n      date: '2021-04-10T15:00:00.000Z',\n      id: '7369078057',\n      coords: [45.781888393881964, 15.919871807163874],\n      distance: 8,\n      duration: 3,\n      note: 'Đir oko Jaruna',\n      type: 'setnja',\n      description: 'Setnja 10. travnja',\n    },\n    {\n      date: '2021-04-10T15:00:00.000Z',\n      id: '7369207716',\n      coords: [45.80071866151842, 15.871010541522995],\n      distance: 10,\n      duration: 3,\n      note: 'Do patkica',\n      type: 'izlet',\n      description: 'Izlet 10. travnja',\n    },\n    {\n      date: '2020-08-23T15:00:00.000Z',\n      id: '7369278868',\n      coords: [45.80059599438224, 15.870924711489355],\n      distance: 10,\n      duration: 2,\n      note: 'Išli hraniti patkice',\n      type: 'izlet',\n      description: 'Izlet 23. kolovoza',\n    },\n    {\n      date: '2020-08-23T15:00:00.000Z',\n      id: '7369458011',\n      coords: [45.836818822828874, 15.6048721075058],\n      distance: 8,\n      duration: 2,\n      note: 'Divlje vode',\n      type: 'izlet',\n      description: 'Izlet 23. kolovoza',\n    },\n    {\n      date: '2020-08-23T15:00:00.000Z',\n      id: '7369490299',\n      coords: [45.71081835554325, 16.09618949471042],\n      distance: 10,\n      duration: 2,\n      note: 'Novo Čiče',\n      type: 'bicikliranje',\n      description: 'Bicikliranje 23. kolovoza',\n    },\n    {\n      date: '2020-08-23T15:00:00.000Z',\n      id: '7369555298',\n      coords: [45.88034264907679, 15.797160743422866],\n      distance: 9,\n      duration: 4,\n      note: 'Kod Trajbara ',\n      type: 'izlet',\n      description: 'Izlet 23. kolovoza',\n    },\n    {\n      date: '2021-10-10T15:00:00.000Z',\n      id: '7369793178',\n      coords: [45.873783006242355, 15.803413510257089],\n      distance: 11,\n      duration: 5,\n      note: 'Novi dvori Golf',\n      type: 'izlet',\n      description: 'Izlet 10. listopada',\n    },\n    {\n      date: '2021-10-10T15:00:00.000Z',\n      id: '7369849314',\n      coords: [45.80288398468955, 15.896927118301393],\n      distance: 8,\n      duration: 2,\n      note: 'Kukuljac',\n      type: 'romobil',\n      description: 'Romobil 10. listopada',\n    },\n    {\n      date: '2021-10-10T15:00:00.000Z',\n      id: '7369872266',\n      coords: [45.80008138941919, 15.871727228295644],\n      distance: 10,\n      duration: 3,\n      note: 'Patkice',\n      type: 'bicikliranje',\n      description: 'Bicikliranje 10. listopada',\n    },\n    {\n      date: '2021-10-10T15:00:00.000Z',\n      id: '7369910290',\n      coords: [45.80728692340022, 15.893315792181967],\n      distance: 5,\n      duration: 2,\n      note: 'Plavi parkić',\n      type: 'setnja',\n      description: 'Setnja 10. listopada',\n    },\n    {\n      date: '2020-12-30T16:00:00.000Z',\n      id: '7370193186',\n      coords: [45.856333665351556, 15.894487382029187],\n      distance: 8,\n      duration: 3,\n      note: 'Sljeme',\n      type: 'sanjkanje',\n      description: 'Sanjkanje 30. prosinca',\n    },\n    {\n      date: '2020-12-30T16:00:00.000Z',\n      id: '7370268931',\n      coords: [45.77465937117427, 15.688055991340663],\n      distance: 8,\n      duration: 4,\n      note: 'Rude',\n      type: 'izlet',\n      description: 'Izlet 30. prosinca',\n    },\n    {\n      date: '2020-12-30T16:00:00.000Z',\n      id: '7370399931',\n      coords: [45.79734372704254, 15.837684625585101],\n      distance: 12,\n      duration: 3,\n      note: 'Rakitje',\n      type: 'setnja',\n      description: 'Setnja 30. prosinca',\n    },\n    {\n      date: '2020-12-30T16:00:00.000Z',\n      id: '7370491709',\n      coords: [45.79663760196601, 15.780761704081673],\n      distance: 8,\n      duration: 3,\n      note: 'Kava u Samoboru',\n      type: 'izlet',\n      description: 'Izlet 30. prosinca',\n    },\n    {\n      date: '2021-11-20T01:10:27.627Z',\n      id: '7370627627',\n      coords: [45.804204080079074, 15.89598834530989],\n      distance: 3,\n      duration: 2,\n      note: 'Kukuljac',\n      type: 'setnja',\n      description: 'Setnja 20. studenog',\n    },\n  ];\n  coords = [];\n  constructor() {\n    this._getPosition();\n    this._getLocalStorage();\n    /////////////////////////////////////SAMO ZA TESTIRANJE /////////////////////\n    this.#aktivnosti.forEach(aktiv => {\n      this._renderAktivnost(aktiv);\n    });\n    /////////////////////////////////////////////////////////////////////////////\n    form.addEventListener('submit', this._novaAktivnost.bind(this));\n    inputType.addEventListener('change', this._toggleElevationField);\n    Array.from(godisnjaDoba).forEach(el =>\n      el.addEventListener('click', this._prikazAktivKarta.bind(this))\n    );\n    Array.from(holder).forEach(el =>\n      el.addEventListener('click', this._prikazLista.bind(this))\n    );\n    cancel.addEventListener('click', this._hideForm.bind(this));\n\n    setTimeout(this._slideOut, 3000);\n  }\n\n  _slideOut() {\n    loader.classList.remove('loader-in');\n    loader.classList.add('loader-out');\n    setTimeout(() => loader.classList.add('hidden'), 3000);\n  }\n\n  _getPosition() {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert('Could not get your position');\n        }\n      );\n  }\n\n  _loadMap(position) {\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    // console.log(`https://www.google.com/maps/@${latitude},${longitude}`);\n\n    this.coords.push(latitude, longitude);\n\n    ////////////////////// TILES //////////////////////\n    // 'https://tile.thunderforest.com/cycle/{z}/{x}/{y}.png?apikey=6d0637f16cf045c08a26f98b9813eb24',\n    const satelit = L.tileLayer(\n        'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        {\n          // attribution:\n          //   'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n        }\n      ),\n      ulice = L.tileLayer(\n        'https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png',\n        {\n          attribution:\n            'Tiles &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        }\n      );\n\n    const baseMaps = {\n      Satelit: satelit,\n      Ulice: ulice,\n    };\n    this.#map = L.map('map', {\n      enableHighAccuracy: true,\n      layers: [ulice],\n    }).setView(this.coords, 15);\n\n    L.control.layers(baseMaps).addTo(this.#map);\n    this.#map.on('click', this._showForm.bind(this));\n\n    this.#aktivnosti.forEach(aktiv => {\n      this._renderAktivnostMarker(aktiv);\n    });\n\n    L.marker([latitude, longitude]).addTo(this.#map);\n  }\n\n  _showForm(mapE) {\n    //Handlanje klikovima na mapi\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n  }\n\n  /* _toggleElevationField() {\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  } */\n\n  _novaAktivnost(e) {\n    const isValid = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp) && inp > 0);\n    e.preventDefault();\n    if (e.target.closest('.cancel')) return;\n\n    // Get data from a form\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const note = inputDescription.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let aktivnost;\n\n    // If aktivnost setnja, create setnja object itd\n    if (type === 'setnja') {\n      // Check if data is valid\n      if (!isValid(distance, duration))\n        return alert('Unos mora biti pozitivan broj!');\n      aktivnost = new Setnja([lat, lng], distance, duration, note);\n    }\n    if (type === 'bicikliranje') {\n      if (!isValid(distance, duration))\n        return alert('Unos mora biti pozitivan broj!');\n      aktivnost = new Bicikliranje([lat, lng], distance, duration, note);\n    }\n    if (type === 'romobil') {\n      if (!isValid(distance, duration))\n        return alert('Unos mora biti pozitivan broj!');\n      aktivnost = new Rolanje([lat, lng], distance, duration, note);\n    }\n    if (type === 'izlet') {\n      if (!isValid(distance, duration))\n        return alert('Unos mora biti pozitivan broj!');\n      aktivnost = new Izlet([lat, lng], distance, duration, note);\n    }\n    if (type === 'sanjkanje') {\n      if (!isValid(distance, duration))\n        return alert('Unos mora biti pozitivan broj!');\n      aktivnost = new Sanjkanje([lat, lng], distance, duration, note);\n    }\n\n    // Add new object to aktivnost array\n    this.#aktivnosti.push(aktivnost);\n\n    // Render aktivnost as a marker on the map\n    this._renderAktivnostMarker(aktivnost);\n\n    // Render aktivnost on list\n    this._renderAktivnost(aktivnost);\n\n    // Hide form + clear input fields\n    this._hideForm();\n\n    //Set local storage\n    this._setLocalStorage();\n  }\n\n  _renderAktivnostMarker(aktiv) {\n    let godDoba = this._getGodDoba(aktiv);\n    let aktivnost;\n    aktiv.type === 'setnja' ? (aktivnost = '🚶‍♀️🚶‍♂️🚶‍♀️') : aktiv.type;\n    aktiv.type === 'bicikliranje' ? (aktivnost = '🚲🚲🚲') : aktiv.type;\n    aktiv.type === 'romobil' ? (aktivnost = '🛴') : aktiv.type;\n    aktiv.type === 'izlet' ? (aktivnost = '🗻') : aktiv.type;\n    aktiv.type === 'sanjkanje' ? (aktivnost = '❄❄❄ ') : aktiv.type;\n\n    L.marker(aktiv.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${godDoba}-popup`,\n        })\n      )\n\n      .setPopupContent(`${aktivnost} ${aktiv.description}`)\n      .openPopup();\n  }\n\n  _getGodDoba(aktivnost) {\n    if (!aktivnost) return;\n    const date = new Date(aktivnost.date);\n    const [day, month] = [date.getDate(), date.getMonth()];\n\n    let godDoba;\n    //prettier-ignore\n    const monthDay = ((month + 1) * 100) + day;\n    if (monthDay <= 320) godDoba = 'zima';\n    else if (monthDay <= 620) godDoba = 'proljece';\n    else if (monthDay <= 922) godDoba = 'ljeto';\n    else if (monthDay <= 1220) godDoba = 'jesen';\n    else godDoba = 'zima';\n    return godDoba;\n  }\n\n  _renderAktivnost(aktivnost) {\n    let aktiv;\n    aktivnost.type === 'setnja' ? (aktiv = '🚶‍♀️🚶‍♂️🚶‍♀️') : aktivnost.type;\n    aktivnost.type === 'bicikliranje' ? (aktiv = '🚲🚲🚲') : aktivnost.type;\n    aktivnost.type === 'romobil' ? (aktiv = '🛴') : aktivnost.type;\n    aktivnost.type === 'izlet' ? (aktiv = '🗻') : aktivnost.type;\n    aktivnost.type === 'sanjkanje' ? (aktiv = '❄❄❄ ') : aktivnost.type;\n\n    let sat = 'sati';\n    aktivnost.duration === 1 ||\n    aktivnost.duration === 21 ||\n    aktivnost.duration === 31\n      ? (sat = 'sat')\n      : aktivnost.duration;\n    aktivnost.duration === 2 ||\n    aktivnost.duration === 22 ||\n    aktivnost.duration === 32\n      ? (sat = 'sata')\n      : aktivnost.duration;\n    aktivnost.duration === 3 ||\n    aktivnost.duration === 23 ||\n    aktivnost.duration === 33\n      ? (sat = 'sata')\n      : aktivnost.duration;\n    aktivnost.duration === 4 ||\n    aktivnost.duration === 24 ||\n    aktivnost.duration === 34\n      ? (sat = 'sata')\n      : aktivnost.duration;\n\n    const doba = this._getGodDoba(aktivnost);\n    //prettier-ignore\n    let html = `\n    <li class=\"aktivnost aktivnost--${aktivnost.type} aktivnost--${doba}\" data-id=\"${aktivnost.id}\">\n      <h2 class=\"aktivnost__title\">${aktivnost.description}</h2>\n        <div class=\"aktivnost__details ikone\" style=\"grid-column: 2\">\n          <span class=\"aktivnost__icon\"> ${aktiv} </span>\n          <span class=\"aktivnost__value\">${aktivnost.distance}</span>\n          <span class=\"aktivnost__unit\">km</span>\n        </div>\n        <div class=\"aktivnost__details\" style=\"grid-column: 3\">\n          <span class=\"aktivnost__icon\">⏱</span>\n          <span class=\"aktivnost__value\">${aktivnost.duration}</span>\n          <span class=\"aktivnost__unit\">${sat}</span>\n        </div>\n        <div class=\"aktivnost__details aktivnost__details-note\">\n          <span class=\"aktivnost__icon\">📝</span>\n          <span class=\"aktivnost__value biljeska\">${aktivnost.note}</span>\n        </div>\n    </li>\n            `;\n\n    const pljjz = [...godisnjaDoba];\n    pljjz.forEach(dob => {\n      if (dob.classList.contains(doba) && doba === 'proljece')\n        proljeceLista.insertAdjacentHTML('afterbegin', html);\n      if (dob.classList.contains(doba) && doba === 'ljeto')\n        ljetoLista.insertAdjacentHTML('afterbegin', html);\n      if (dob.classList.contains(doba) && doba === 'jesen')\n        jesenLista.insertAdjacentHTML('afterbegin', html);\n      if (dob.classList.contains(doba) && doba === 'zima')\n        zimaLista.insertAdjacentHTML('afterbegin', html);\n    });\n    // containerAktivnosti.insertAdjacentHTML('afterend', html);\n  }\n\n  _hideForm() {\n    // prettier-ignore\n    inputType.value = inputDistance.value = inputDuration.value = inputDescription.value = '';\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  _prikazAktivKarta(e) {\n    if (!this.#map) return;\n    //const [lat, lng] = this.coords;\n    const aktivnostEl = e.target.closest('.aktivnost');\n    //guard clause -> stražar\n    if (!aktivnostEl) return;\n\n    // prettier-ignore\n    const aktivnost = this.#aktivnosti.find(akt => akt.id === aktivnostEl.dataset.id);\n\n    const aktivnostiSve = document.querySelectorAll('.aktivnost');\n    Array.from(aktivnostiSve).forEach(a =>\n      a.classList.remove('aktivnost--aktivna')\n    );\n\n    aktivnost.id === aktivnostEl.dataset.id\n      ? aktivnostEl.classList.add('aktivnost--aktivna')\n      : '';\n\n    /////////////////////animirani prijelazi ////////////\n    // prettier-ignore\n    this.#map.flyTo(aktivnost.coords, 16, { animate: true, duration: 1 });\n    setTimeout(\n      () =>\n        this.#map.flyTo(aktivnost.coords, 15, {\n          animate: true,\n          duration: 1,\n        }),\n      2000\n    );\n\n    // this.#map.setView(aktivnost.coords, 15, {\n    //   animate: true,\n    //   pan: {\n    //     duration: 1,\n    //   },\n    // });\n    // aktiv.click();\n  }\n\n  _prikazLista(e) {\n    if (e.target.parentElement.nextElementSibling.children.length === 0) return;\n\n    if (e.target === spring) {\n      proljeceLista.classList.remove('hidden');\n      btnProljece.classList.remove('hidden');\n      medjusloj.style = `background: url(../img/latice.gif);`;\n      btnProljece.addEventListener('click', () => {\n        proljeceLista.classList.add('hidden');\n        btnProljece.classList.add('hidden');\n        medjusloj.style = ``;\n      });\n    }\n    if (e.target === summer || e.target === summerImg) {\n      ljetoLista.classList.remove('hidden');\n      btnLjeto.classList.remove('hidden');\n      medjusloj2.style = `\n        z-index: 0;\n      `;\n      btnLjeto.addEventListener('click', () => {\n        ljetoLista.classList.add('hidden');\n        btnLjeto.classList.add('hidden');\n        medjusloj2.style = ``;\n      });\n    }\n    if (e.target === autumn) {\n      jesenLista.classList.remove('hidden');\n      btnJesen.classList.remove('hidden');\n      medjusloj4.style = `background: url(../img/lisce.gif) no-repeat;\n      background-size: cover;`;\n      btnJesen.addEventListener('click', () => {\n        jesenLista.classList.add('hidden');\n        btnJesen.classList.add('hidden');\n        medjusloj4.style = ``;\n      });\n    }\n    if (e.target === winter) {\n      zimaLista.classList.remove('hidden');\n      btnZima.classList.remove('hidden');\n      medjusloj3.style = `background: url(../img/snijeg.gif);`;\n      btnZima.addEventListener('click', () => {\n        btnZima.classList.add('hidden');\n        zimaLista.classList.add('hidden');\n        medjusloj3.style = ``;\n      });\n    }\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem('aktivnosti', JSON.stringify(this.#aktivnosti));\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('aktivnosti'));\n    if (!data) return;\n\n    this.#aktivnosti = data;\n    // console.log(JSON.stringify(data));\n\n    this.#aktivnosti.forEach(aktiv => {\n      this._renderAktivnost(aktiv);\n    });\n  }\n\n  // reset() {\n  //   localStorage.removeItem('aktivnosti');\n  //   location.reload();\n  // }\n}\n\nconst app = new App();\n"],"names":["Aktivnost","date","Date","id","now","slice","coords6","distance","duration","note","this","coords","_setDescription","description","type","toUpperCase","getDate","getMonth","Setnja","coords1","distance1","duration1","note1","super","Bicikliranje","coords2","distance2","duration2","note2","Rolanje","coords3","distance3","duration3","note3","Izlet","coords4","distance4","duration4","note4","Sanjkanje","coords5","distance5","duration5","note5","karta","document","getElementById","form","querySelector","loader","containerAktivnosti","inputType","inputDistance","inputDuration","inputDescription","holder","querySelectorAll","godisnjaDoba","proljeceLista","ljetoLista","jesenLista","medjusloj","medjusloj2","medjusloj3","medjusloj4","zimaLista","spring","summer","summerImg","autumn","winter","cancel","btnProljece","btnLjeto","btnJesen","btnZima","App","map","mapEvent","aktivnosti","_getPosition","_getLocalStorage","forEach","aktiv","_renderAktivnost","addEventListener","_novaAktivnost","bind","_toggleElevationField","Array","from","el","_prikazAktivKarta","_prikazLista","_hideForm","setTimeout","_slideOut","classList","remove","add","navigator","geolocation","getCurrentPosition","_loadMap","alert","position","latitude","longitude","push","satelit","L","tileLayer","ulice","attribution","baseMaps","Satelit","Ulice","enableHighAccuracy","layers","setView","control","addTo","on","_showForm","_renderAktivnostMarker","marker","mapE","focus","e","isValid","inputs","every","inp","Number","isFinite","preventDefault","target","closest","value","lat","lng","latlng","aktivnost","_setLocalStorage","aktiv1","godDoba","_getGodDoba","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","className","setPopupContent","openPopup","day","month","monthDay","aktivnost1","sat","doba","html","dob","contains","insertAdjacentHTML","style","display","e1","aktivnostEl","find","akt","dataset","aktivnostiSve","a","flyTo","animate","e2","parentElement","nextElementSibling","children","length"],"version":3,"file":"index.9f9b4bca.js.map"}